{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","pages/AboutPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","TodoForm","props","ref","useRef","onKeyPress","event","key","onAdd","current","value","type","id","placeholder","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","toString","checked","onChange","bind","title","onClick","preventDefault","removeHandler","TodosPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prevTodos","confirm","filter","AboutPage","history","useHistory","Fragment","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3137a529.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nexport const Navbar: React.FunctionComponent = () => (\n  <nav>\n    <div className=\"nav-wrapper deep-purple darken-1 px1\">\n      <a href=\"/\" className=\"brand-logo\">\n        React + TypeScript\n      </a>\n      <ul className=\"right hide-on-med-and-down\">\n        <li>\n          <NavLink to=\"/\">Список дел</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">Информация</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n)\n","import React, { useRef } from 'react'\n// export const TodoForm: React.FunctionComponent<{\n//   onAdd(title: string): void\n// }> = props => {\n\ninterface TodoFormProps {\n  onAdd(title: string): void\n}\nexport const TodoForm: React.FunctionComponent<TodoFormProps> = props => {\n  // const [title, setTitle] = useState<string>('')\n  const ref = useRef<HTMLInputElement>(null)\n  // const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setTitle(event.target.value)\n  // }\n  const keyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      props.onAdd(ref.current!.value)\n      ref.current!.value = ''\n      // console.log('title:', title)\n      // setTitle('')\n    }\n  }\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        onKeyPress={keyPressHandler}\n        // onChange={changeHandler}\n        // value={title}\n        ref={ref}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Введите название дела\"\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Введите название дела\n      </label>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ITodo } from '../interfaces'\ntype TodoListProps = {\n  todos: ITodo[]\n  onToggle(id: number): void\n  // onRemove?: (id: number) => void\n  onRemove(id: number): void\n}\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onRemove,\n  onToggle,\n}) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">Список задач пока пуст</p>\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault()\n    onRemove(id)\n  }\n\n  return (\n    <ul>\n      {todos.map(todo => {\n        const classes = ['todo']\n        if (todo.completed) {\n          classes.push('completed')\n        }\n        return (\n          <li className={classes.join(' ')} key={todo.id}>\n            <label htmlFor={todo.id.toString()}>\n              <input\n                type=\"checkbox\"\n                id={todo.id.toString()}\n                checked={todo.completed}\n                onChange={onToggle.bind(null, todo.id)}\n              />\n              <span>{todo.title}</span>\n              <i\n                className=\"material-icons red-text\"\n                onClick={event => removeHandler(event, todo.id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { TodoForm } from '../components/TodoForm'\nimport { TodoList } from '../components/TodoList'\nimport { ITodo } from '../interfaces'\ndeclare var confirm: (message: string) => boolean\nexport const TodosPage: React.FC = () => {\n  // const [todos, setTodos] = useState<Array<ITodo>>([])\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\n    setTodos(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const addHandler = (title: string) => {\n    if (!title) {\n      return\n    }\n    const newTodo: ITodo = {\n      title,\n      id: Date.now(),\n      completed: false,\n    }\n    setTodos(prevTodos => [newTodo, ...prevTodos])\n  }\n\n  const toggleHandler = (id: number) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo\n      }),\n    )\n  }\n\n  const removeHandler = (id: number) => {\n    const isConfirm: boolean = confirm('Вы уверены, что хотите удалить задачу?')\n    if (!isConfirm) {\n      return\n    }\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id))\n  }\n  return (\n    <>\n      <TodoForm onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onRemove={removeHandler}\n        onToggle={toggleHandler}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nexport const AboutPage: React.FC = () => {\n  const history = useHistory()\n  return (\n    <React.Fragment>\n      <h1>Страница информации</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci\n        consequatur dicta harum, itaque iusto labore natus pariatur repellat\n        suscipit veniam?\n      </p>\n      <button className=\"btn\" onClick={() => history.push('/')}>\n        Обратно к списку дел\n      </button>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Navbar } from './components/Navbar'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { TodosPage } from './pages/TodosPage'\nimport { AboutPage } from './pages/AboutPage'\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodosPage} path=\"/\" exact />\n          <Route component={AboutPage} path=\"/about\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'materialize-css/dist/css/materialize.css'\nimport 'material-icons/iconfont/material-icons.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}